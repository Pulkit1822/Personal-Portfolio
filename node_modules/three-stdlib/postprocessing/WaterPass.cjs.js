"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/defineProperty"),t=require("three"),r=require("./Pass.cjs.js");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=i(e);class a extends r.Pass{constructor(){super(),n.default(this,"material",void 0),n.default(this,"fsQuad",void 0),n.default(this,"factor",void 0),n.default(this,"time",void 0),n.default(this,"uniforms",void 0),this.uniforms=t.UniformsUtils.clone({tex:{value:null},time:{value:0},factor:{value:0},resolution:{value:new t.Vector2(64,64)}}),this.material=new t.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n      varying vec2 vUv;\n      void main(){  \n        vUv = uv; \n        vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * modelViewPosition;\n      }",fragmentShader:"\n      uniform float time;\n      uniform float factor;\n      uniform vec2 resolution;\n      uniform sampler2D tex;\n      varying vec2 vUv;\n      void main() {  \n        vec2 uv1 = vUv;\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\n        float frequency = 6.0 * factor;\n        float amplitude = 0.015 * factor;\n        float x = uv1.y * frequency + time * .7; \n        float y = uv1.x * frequency + time * .3;\n        uv1.x += cos(x+y) * amplitude * cos(y);\n        uv1.y += sin(x-y) * amplitude * cos(y);\n        vec4 rgba = texture2D(tex, uv1);\n        gl_FragColor = rgba;\n      }"}),this.fsQuad=new r.FullScreenQuad(this.material),this.factor=0,this.time=0}render(e,t,r){this.uniforms.tex.value=r.texture,this.uniforms.time.value=this.time,this.uniforms.factor.value=this.factor,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e))}}exports.WaterPass=a;
