import {
  CardElement,
  useElements,
  useStripe
} from "./chunk-AAKQGJLB.js";
import "./chunk-5QPITZQB.js";
import {
  require_react
} from "./chunk-C3MNZ72B.js";
import {
  __commonJS,
  __toESM
} from "./chunk-JEXKZRFY.js";

// node_modules/@formspree/core/dist/index.js
var require_dist = __commonJS({
  "node_modules/@formspree/core/dist/index.js"(exports, module) {
    var E2 = Object.defineProperty;
    var Y = Object.defineProperties;
    var k2 = Object.getOwnPropertyDescriptor;
    var K2 = Object.getOwnPropertyDescriptors;
    var $2 = Object.getOwnPropertyNames;
    var O2 = Object.getOwnPropertySymbols;
    var P = Object.prototype.hasOwnProperty;
    var z2 = Object.prototype.propertyIsEnumerable;
    var C2 = (e, t, r) => t in e ? E2(e, t, { enumerable: true, configurable: true, writable: true, value: r }) : e[t] = r;
    var S2 = (e, t) => {
      for (var r in t || (t = {}))
        P.call(t, r) && C2(e, r, t[r]);
      if (O2)
        for (var r of O2(t))
          z2.call(t, r) && C2(e, r, t[r]);
      return e;
    };
    var g = (e, t) => Y(e, K2(t));
    var J2 = (e, t) => {
      for (var r in t)
        E2(e, r, { get: t[r], enumerable: true });
    };
    var q2 = (e, t, r, o) => {
      if (t && typeof t == "object" || typeof t == "function")
        for (let i of $2(t))
          !P.call(e, i) && i !== r && E2(e, i, { get: () => t[i], enumerable: !(o = k2(t, i)) || o.enumerable });
      return e;
    };
    var G = (e) => q2(E2({}, "__esModule", { value: true }), e);
    var R = (e, t, r) => new Promise((o, i) => {
      var s = (p) => {
        try {
          n2(r.next(p));
        } catch (c) {
          i(c);
        }
      }, a = (p) => {
        try {
          n2(r.throw(p));
        } catch (c) {
          i(c);
        }
      }, n2 = (p) => p.done ? o(p.value) : Promise.resolve(p.value).then(s, a);
      n2((r = r.apply(e, t)).next());
    });
    var Z = {};
    J2(Z, { Client: () => b2, createClient: () => x2, getDefaultClient: () => U2, isFieldError: () => M });
    module.exports = G(Z);
    var m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var H2 = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
    function w(e) {
      e = String(e);
      for (var t, r, o, i, s = "", a = 0, n2 = e.length % 3; a < e.length; ) {
        if ((r = e.charCodeAt(a++)) > 255 || (o = e.charCodeAt(a++)) > 255 || (i = e.charCodeAt(a++)) > 255)
          throw new TypeError("Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.");
        t = r << 16 | o << 8 | i, s += m.charAt(t >> 18 & 63) + m.charAt(t >> 12 & 63) + m.charAt(t >> 6 & 63) + m.charAt(t & 63);
      }
      return n2 ? s.slice(0, n2 - 3) + "===".substring(n2) : s;
    }
    function F2(e) {
      if (e = String(e).replace(/[\t\n\f\r ]+/g, ""), !H2.test(e))
        throw new TypeError("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
      e += "==".slice(2 - (e.length & 3));
      for (var t, r = "", o, i, s = 0; s < e.length; )
        t = m.indexOf(e.charAt(s++)) << 18 | m.indexOf(e.charAt(s++)) << 12 | (o = m.indexOf(e.charAt(s++))) << 6 | (i = m.indexOf(e.charAt(s++))), r += o === 64 ? String.fromCharCode(t >> 16 & 255) : i === 64 ? String.fromCharCode(t >> 16 & 255, t >> 8 & 255) : String.fromCharCode(t >> 16 & 255, t >> 8 & 255, t & 255);
      return r;
    }
    var A2 = "2.8.3";
    var D2 = ((s) => (s.REQUIRED_FIELD_MISSING = "REQUIRED_FIELD_MISSING", s.REQUIRED_FIELD_EMPTY = "REQUIRED_FIELD_EMPTY", s.TYPE_EMAIL = "TYPE_EMAIL", s.TYPE_NUMERIC = "TYPE_NUMERIC", s.TYPE_TEXT = "TYPE_TEXT", s))(D2 || {});
    function M(e) {
      return e.code in D2 && e.field !== void 0;
    }
    function N2(e) {
      return e.errors !== void 0;
    }
    var j = (e) => w(JSON.stringify(e));
    var L = (e) => {
      let t = `@formspree/core@${A2}`;
      return e ? `${e} ${t}` : t;
    };
    var v = () => 1 * new Date();
    var h = (e, t, r) => {
      e instanceof FormData ? e.append(t, r) : e = Object.assign(e, { [t]: r });
    };
    var B2 = (p) => R(void 0, [p], function* ({ stripePromise: e, response: t, responseData: r, payload: o, data: i, fetchImpl: s, request: a, url: n2 }) {
      let c = yield e.handleCardAction(r.stripe.paymentIntentClientSecret);
      if (c.error)
        return { response: t, body: { errors: [{ code: "STRIPE_CLIENT_ERROR", message: "Stripe SCA error", field: "paymentMethod" }] } };
      {
        o.paymentMethod.id || h(i, "paymentMethod", o.paymentMethod.id), h(i, "paymentIntent", c.paymentIntent.id), h(i, "resubmitKey", r.resubmitKey);
        let l = yield s(n2, g(S2({}, a), { body: JSON.stringify({ paymentIntent: c.paymentIntent.id, resubmitKey: r.resubmitKey }) })), u = yield l.json();
        return { response: l, body: u };
      }
    });
    function _2({ body: e, response: t }) {
      return !N2(e) && (e != null && e.error) && (e = { errors: [{ message: e.error }] }), { body: e, response: t };
    }
    var V = () => navigator.webdriver || !!document.documentElement.getAttribute(F2("d2ViZHJpdmVy")) || !!window.callPhantom || !!window._phantom;
    var I2 = class {
      constructor() {
        this.loadedAt = v(), this.webdriver = V();
      }
      teardown() {
      }
      data() {
        return { loadedAt: this.loadedAt, webdriver: this.webdriver };
      }
    };
    var b2 = class {
      constructor(t = {}) {
        this.project = t.project, this.stripePromise = t.stripePromise, typeof window != "undefined" && this.startBrowserSession();
      }
      startBrowserSession() {
        this.session || (this.session = new I2());
      }
      teardown() {
        this.session && this.session.teardown();
      }
      submitForm(i, s) {
        return R(this, arguments, function* (t, r, o = {}) {
          let a = o.endpoint || "https://formspree.io", n2 = o.fetchImpl || fetch, p = this.project ? `${a}/p/${this.project}/f/${t}` : `${a}/f/${t}`, c = (d) => d instanceof FormData ? d : JSON.stringify(d), l = { Accept: "application/json", "Formspree-Client": L(o.clientName) };
          this.session && (l["Formspree-Session-Data"] = j(this.session.data())), r instanceof FormData || (l["Content-Type"] = "application/json");
          let u = { method: "POST", mode: "cors", body: c(r), headers: l };
          if (this.stripePromise && o.createPaymentMethod) {
            let d = yield o.createPaymentMethod();
            if (d.error)
              return { response: null, body: { errors: [{ code: "STRIPE_CLIENT_ERROR", message: "Error creating payment method", field: "paymentMethod" }] } };
            h(r, "paymentMethod", d.paymentMethod.id);
            let y = yield n2(p, g(S2({}, u), { body: r })), f = yield y.json();
            return f && f.stripe && f.stripe.requiresAction && f.resubmitKey ? yield B2({ stripePromise: this.stripePromise, responseData: f, response: y, payload: d, data: r, fetchImpl: n2, request: u, url: p }) : _2({ response: y, body: f });
          } else
            return n2(p, u).then((d) => d.json().then((y) => _2({ body: y, response: d }))).catch();
        });
      }
    };
    var x2 = (e) => new b2(e);
    var U2 = () => (T || (T = x2()), T);
    var T;
  }
});

// node_modules/@stripe/stripe-js/dist/pure.js
var require_pure = __commonJS({
  "node_modules/@stripe/stripe-js/dist/pure.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var V3_URL = "https://js.stripe.com/v3";
    var V3_URL_REGEX = /^https:\/\/js\.stripe\.com\/v3\/?(\?.*)?$/;
    var EXISTING_SCRIPT_MESSAGE = "loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used";
    var findScript = function findScript2() {
      var scripts = document.querySelectorAll('script[src^="'.concat(V3_URL, '"]'));
      for (var i = 0; i < scripts.length; i++) {
        var script = scripts[i];
        if (!V3_URL_REGEX.test(script.src)) {
          continue;
        }
        return script;
      }
      return null;
    };
    var injectScript = function injectScript2(params) {
      var queryString = params && !params.advancedFraudSignals ? "?advancedFraudSignals=false" : "";
      var script = document.createElement("script");
      script.src = "".concat(V3_URL).concat(queryString);
      var headOrBody = document.head || document.body;
      if (!headOrBody) {
        throw new Error("Expected document.body not to be null. Stripe.js requires a <body> element.");
      }
      headOrBody.appendChild(script);
      return script;
    };
    var registerWrapper = function registerWrapper2(stripe, startTime) {
      if (!stripe || !stripe._registerWrapper) {
        return;
      }
      stripe._registerWrapper({
        name: "stripe-js",
        version: "1.54.0",
        startTime
      });
    };
    var stripePromise = null;
    var loadScript = function loadScript2(params) {
      if (stripePromise !== null) {
        return stripePromise;
      }
      stripePromise = new Promise(function(resolve, reject) {
        if (typeof window === "undefined" || typeof document === "undefined") {
          resolve(null);
          return;
        }
        if (window.Stripe && params) {
          console.warn(EXISTING_SCRIPT_MESSAGE);
        }
        if (window.Stripe) {
          resolve(window.Stripe);
          return;
        }
        try {
          var script = findScript();
          if (script && params) {
            console.warn(EXISTING_SCRIPT_MESSAGE);
          } else if (!script) {
            script = injectScript(params);
          }
          script.addEventListener("load", function() {
            if (window.Stripe) {
              resolve(window.Stripe);
            } else {
              reject(new Error("Stripe.js not available"));
            }
          });
          script.addEventListener("error", function() {
            reject(new Error("Failed to load Stripe.js"));
          });
        } catch (error) {
          reject(error);
          return;
        }
      });
      return stripePromise;
    };
    var initStripe = function initStripe2(maybeStripe, args, startTime) {
      if (maybeStripe === null) {
        return null;
      }
      var stripe = maybeStripe.apply(void 0, args);
      registerWrapper(stripe, startTime);
      return stripe;
    };
    var validateLoadParams = function validateLoadParams2(params) {
      var errorMessage = "invalid load parameters; expected object of shape\n\n    {advancedFraudSignals: boolean}\n\nbut received\n\n    ".concat(JSON.stringify(params), "\n");
      if (params === null || _typeof(params) !== "object") {
        throw new Error(errorMessage);
      }
      if (Object.keys(params).length === 1 && typeof params.advancedFraudSignals === "boolean") {
        return params;
      }
      throw new Error(errorMessage);
    };
    var loadParams;
    var loadStripeCalled = false;
    var loadStripe = function loadStripe2() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      loadStripeCalled = true;
      var startTime = Date.now();
      return loadScript(loadParams).then(function(maybeStripe) {
        return initStripe(maybeStripe, args, startTime);
      });
    };
    loadStripe.setLoadParameters = function(params) {
      if (loadStripeCalled && loadParams) {
        var validatedParams = validateLoadParams(params);
        var parameterKeys = Object.keys(validatedParams);
        var sameParameters = parameterKeys.reduce(function(previousValue, currentValue) {
          var _loadParams;
          return previousValue && params[currentValue] === ((_loadParams = loadParams) === null || _loadParams === void 0 ? void 0 : _loadParams[currentValue]);
        }, true);
        if (sameParameters) {
          return;
        }
      }
      if (loadStripeCalled) {
        throw new Error("You cannot change load parameters after calling loadStripe");
      }
      loadParams = validateLoadParams(params);
    };
    exports.loadStripe = loadStripe;
  }
});

// node_modules/@stripe/stripe-js/pure.js
var require_pure2 = __commonJS({
  "node_modules/@stripe/stripe-js/pure.js"(exports, module) {
    module.exports = require_pure();
  }
});

// node_modules/@formspree/react/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var import_core = __toESM(require_dist(), 1);
var import_pure = __toESM(require_pure2(), 1);
var import_react2 = __toESM(require_react(), 1);
var import_react3 = __toESM(require_react(), 1);
var import_core2 = __toESM(require_dist(), 1);
var B = (0, import_react.lazy)(() => import("./react-stripe.esm-24JDIMM2.js").then((r) => ({ default: r.Elements })));
var b = import_react.default.createContext(null);
b.displayName = "Formspree";
var x;
var O = (r) => (x || (x = (0, import_pure.loadStripe)(r)), x);
var D = (r, o) => {
  let i = {};
  return r && (i.stripePromise = r), o && (i.project = o), (0, import_core.createClient)(i);
};
var I = (r) => {
  let [o, i] = (0, import_react.useState)(void 0), [p, c] = (0, import_react.useState)(D(o, r.project));
  return (0, import_react.useEffect)(() => (p.startBrowserSession(), () => {
    p.teardown();
  }), []), (0, import_react.useEffect)(() => {
    let a = async (u) => {
      let l = await O(u);
      l && i(l);
    };
    r.stripePK && a(r.stripePK);
  }, [r.stripePK]), (0, import_react.useEffect)(() => {
    o && c(D(o, r.project));
  }, [o]), import_react.default.createElement(b.Provider, { value: { client: p } }, r.stripePK ? import_react.default.createElement(import_react.default.Fragment, null, o && import_react.default.createElement(import_react.Suspense, { fallback: import_react.default.createElement("p", null, "....") }, import_react.default.createElement(B, { stripe: o }, import_react.default.createElement(import_react.default.Fragment, null, r.children)))) : import_react.default.createElement(import_react.default.Fragment, null, r.children));
};
function S() {
  return (0, import_react.useContext)(b) ?? { client: (0, import_core.getDefaultClient)() };
}
var _ = "2.4.4";
var $ = (r) => r.preventDefault !== void 0;
var q = (r, o = {}) => {
  let [i, p] = (0, import_react2.useState)(null), [c, a] = (0, import_react2.useState)(false), [u, l] = (0, import_react2.useState)(false), [j, f] = (0, import_react2.useState)([]), d = S(), T = o.client || d, P, h;
  if (!T)
    throw new Error("You must provide a Formspree client");
  if (!r)
    throw new Error('You must provide a form key or hashid (e.g. useForm("myForm") or useForm("123xyz")');
  d.client && d.client.stripePromise && (P = useStripe(), h = useElements());
  let y = !!o.debug, v = o.data;
  return [{ result: i, submitting: c, succeeded: u, errors: j }, async (g) => {
    let R = async (t) => {
      t.preventDefault();
      let s = t.target;
      if (s.tagName != "FORM")
        throw new Error("submit was triggered for a non-form element");
      return new FormData(s);
    }, e = $(g) ? await R(g) : g, V = (t, s) => {
      e instanceof FormData ? e.append(t, s) : e = Object.assign(e, { [t]: s });
    };
    if (typeof v == "object")
      for (let [t, s] of Object.entries(v)) {
        let m;
        typeof s == "function" ? m = await s() : m = s, m !== void 0 && V(t, m);
      }
    let M = async () => {
      let t = { ...e.address_line1 && { line1: e.address_line1 }, ...e.address_line2 && { line2: e.address_line2 }, ...e.address_city && { city: e.address_city }, ...e.address_country && { country: e.address_country }, ...e.address_state && { state: e.address_state }, ...e.address_postal_code && { postal_code: e.address_postal_code } };
      return await P.createPaymentMethod({ type: "card", card: h.getElement(CardElement), billing_details: { ...e.name && { name: e.name }, ...e.email && { email: e.email }, ...e.phone && { phone: e.phone }, ...t && { address: t } } });
    };
    return a(true), d.client.submitForm(r, e, { endpoint: o.endpoint, clientName: `@formspree/react@${_}`, createPaymentMethod: d.client && d.client.stripePromise ? M : void 0 }).then((t) => {
      let s = t.response.status, m;
      return s === 200 ? (y && console.log("Form submitted", t), l(true), p(t), f([])) : s >= 400 && (m = t.body, m.errors ? (f(m.errors), y && console.log("Error", t)) : (f([{ message: "Unexpected error" }]), y && console.log("Unexpected error", t)), l(false)), t;
    }).catch((t) => {
      throw y && console.log("Unexpected error", t), l(false), t;
    }).finally(() => {
      a(false);
    });
  }, () => {
    a(false), l(false), f([]);
  }];
};
var J = (r) => {
  let { prefix: o, field: i, errors: p, ...c } = r, a = (p || []).find((u) => u.field === i);
  return a ? import_react3.default.createElement("div", { ...c }, o, " ", a.message) : null;
};
var export_isFieldError = import_core2.isFieldError;
export {
  CardElement,
  I as FormspreeProvider,
  J as ValidationError,
  export_isFieldError as isFieldError,
  q as useForm,
  S as useFormspree
};
//# sourceMappingURL=@formspree_react.js.map
